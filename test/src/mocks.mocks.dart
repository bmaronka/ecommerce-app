// Mocks generated by Mockito 5.4.2 from annotations
// in ecommerce_app/test/src/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;

import 'package:ecommerce_app/src/features/authantication/data/fake_auth_repository.dart'
    as _i3;
import 'package:ecommerce_app/src/features/authantication/domain/app_user.dart'
    as _i10;
import 'package:ecommerce_app/src/features/cart/application/cart_service.dart'
    as _i11;
import 'package:ecommerce_app/src/features/cart/data/local/local_cart_repository.dart'
    as _i4;
import 'package:ecommerce_app/src/features/cart/data/remote/remote_cart_repository.dart'
    as _i5;
import 'package:ecommerce_app/src/features/cart/domain/cart.dart' as _i2;
import 'package:ecommerce_app/src/features/cart/domain/item.dart' as _i12;
import 'package:ecommerce_app/src/features/checkout/application/fake_checkout_service.dart'
    as _i15;
import 'package:ecommerce_app/src/features/orders/data/fake_orders_repository.dart'
    as _i6;
import 'package:ecommerce_app/src/features/orders/domain/order.dart' as _i14;
import 'package:ecommerce_app/src/features/products/data/fake_products_repository.dart'
    as _i7;
import 'package:ecommerce_app/src/features/products/domain/product.dart'
    as _i13;
import 'package:ecommerce_app/src/features/reviews/application/reviews_service.dart'
    as _i17;
import 'package:ecommerce_app/src/features/reviews/data/fake_reviews_repository.dart'
    as _i8;
import 'package:ecommerce_app/src/features/reviews/domain/review.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCart_0 extends _i1.SmartFake implements _i2.Cart {
  _FakeCart_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFakeAuthRepository_1 extends _i1.SmartFake
    implements _i3.FakeAuthRepository {
  _FakeFakeAuthRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalCartRepository_2 extends _i1.SmartFake
    implements _i4.LocalCartRepository {
  _FakeLocalCartRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteCartRepository_3 extends _i1.SmartFake
    implements _i5.RemoteCartRepository {
  _FakeRemoteCartRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFakeOrdersRepository_4 extends _i1.SmartFake
    implements _i6.FakeOrdersRepository {
  _FakeFakeOrdersRepository_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFakeProductsRepository_5 extends _i1.SmartFake
    implements _i7.FakeProductsRepository {
  _FakeFakeProductsRepository_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_6 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFakeReviewsRepository_7 extends _i1.SmartFake
    implements _i8.FakeReviewsRepository {
  _FakeFakeReviewsRepository_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FakeAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeAuthRepository extends _i1.Mock
    implements _i3.FakeAuthRepository {
  MockFakeAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get addDelay => (super.noSuchMethod(
        Invocation.getter(#addDelay),
        returnValue: false,
      ) as bool);

  @override
  _i9.Stream<_i10.AppUser?> authStateChanges() => (super.noSuchMethod(
        Invocation.method(
          #authStateChanges,
          [],
        ),
        returnValue: _i9.Stream<_i10.AppUser?>.empty(),
      ) as _i9.Stream<_i10.AppUser?>);

  @override
  _i9.Future<void> signInWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> createUserWithEmailAndPassword(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserWithEmailAndPassword,
          [
            email,
            password,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> signOut() => (super.noSuchMethod(
        Invocation.method(
          #signOut,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [RemoteCartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteCartRepository extends _i1.Mock
    implements _i5.RemoteCartRepository {
  MockRemoteCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Cart> fetchCart(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #fetchCart,
          [uid],
        ),
        returnValue: _i9.Future<_i2.Cart>.value(_FakeCart_0(
          this,
          Invocation.method(
            #fetchCart,
            [uid],
          ),
        )),
      ) as _i9.Future<_i2.Cart>);

  @override
  _i9.Stream<_i2.Cart> watchCart(String? uid) => (super.noSuchMethod(
        Invocation.method(
          #watchCart,
          [uid],
        ),
        returnValue: _i9.Stream<_i2.Cart>.empty(),
      ) as _i9.Stream<_i2.Cart>);

  @override
  _i9.Future<void> setCart(
    String? uid,
    _i2.Cart? cart,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCart,
          [
            uid,
            cart,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [LocalCartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalCartRepository extends _i1.Mock
    implements _i4.LocalCartRepository {
  MockLocalCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i2.Cart> fetchCart() => (super.noSuchMethod(
        Invocation.method(
          #fetchCart,
          [],
        ),
        returnValue: _i9.Future<_i2.Cart>.value(_FakeCart_0(
          this,
          Invocation.method(
            #fetchCart,
            [],
          ),
        )),
      ) as _i9.Future<_i2.Cart>);

  @override
  _i9.Stream<_i2.Cart> watchCart() => (super.noSuchMethod(
        Invocation.method(
          #watchCart,
          [],
        ),
        returnValue: _i9.Stream<_i2.Cart>.empty(),
      ) as _i9.Stream<_i2.Cart>);

  @override
  _i9.Future<void> setCart(_i2.Cart? cart) => (super.noSuchMethod(
        Invocation.method(
          #setCart,
          [cart],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [CartService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartService extends _i1.Mock implements _i11.CartService {
  MockCartService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FakeAuthRepository get authRepository => (super.noSuchMethod(
        Invocation.getter(#authRepository),
        returnValue: _FakeFakeAuthRepository_1(
          this,
          Invocation.getter(#authRepository),
        ),
      ) as _i3.FakeAuthRepository);

  @override
  _i4.LocalCartRepository get localCartRepository => (super.noSuchMethod(
        Invocation.getter(#localCartRepository),
        returnValue: _FakeLocalCartRepository_2(
          this,
          Invocation.getter(#localCartRepository),
        ),
      ) as _i4.LocalCartRepository);

  @override
  _i5.RemoteCartRepository get remoteCartRepository => (super.noSuchMethod(
        Invocation.getter(#remoteCartRepository),
        returnValue: _FakeRemoteCartRepository_3(
          this,
          Invocation.getter(#remoteCartRepository),
        ),
      ) as _i5.RemoteCartRepository);

  @override
  _i9.Future<void> setItem(_i12.Item? item) => (super.noSuchMethod(
        Invocation.method(
          #setItem,
          [item],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> addItem(_i12.Item? item) => (super.noSuchMethod(
        Invocation.method(
          #addItem,
          [item],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> removeItemById(String? productId) => (super.noSuchMethod(
        Invocation.method(
          #removeItemById,
          [productId],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [FakeProductsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeProductsRepository extends _i1.Mock
    implements _i7.FakeProductsRepository {
  MockFakeProductsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get addDelay => (super.noSuchMethod(
        Invocation.getter(#addDelay),
        returnValue: false,
      ) as bool);

  @override
  List<_i13.Product> getProductList() => (super.noSuchMethod(
        Invocation.method(
          #getProductList,
          [],
        ),
        returnValue: <_i13.Product>[],
      ) as List<_i13.Product>);

  @override
  _i13.Product? getProduct(String? id) => (super.noSuchMethod(Invocation.method(
        #getProduct,
        [id],
      )) as _i13.Product?);

  @override
  _i9.Future<List<_i13.Product>> fetchProductList() => (super.noSuchMethod(
        Invocation.method(
          #fetchProductList,
          [],
        ),
        returnValue: _i9.Future<List<_i13.Product>>.value(<_i13.Product>[]),
      ) as _i9.Future<List<_i13.Product>>);

  @override
  _i9.Stream<List<_i13.Product>> watchProductList() => (super.noSuchMethod(
        Invocation.method(
          #watchProductList,
          [],
        ),
        returnValue: _i9.Stream<List<_i13.Product>>.empty(),
      ) as _i9.Stream<List<_i13.Product>>);

  @override
  _i9.Stream<_i13.Product?> watchProduct(String? id) => (super.noSuchMethod(
        Invocation.method(
          #watchProduct,
          [id],
        ),
        returnValue: _i9.Stream<_i13.Product?>.empty(),
      ) as _i9.Stream<_i13.Product?>);
}

/// A class which mocks [FakeOrdersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeOrdersRepository extends _i1.Mock
    implements _i6.FakeOrdersRepository {
  MockFakeOrdersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get addDelay => (super.noSuchMethod(
        Invocation.getter(#addDelay),
        returnValue: false,
      ) as bool);

  @override
  _i9.Stream<List<_i14.Order>> watchUserOrders(String? uid) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchUserOrders,
          [uid],
        ),
        returnValue: _i9.Stream<List<_i14.Order>>.empty(),
      ) as _i9.Stream<List<_i14.Order>>);

  @override
  _i9.Future<void> addOrder(
    String? uid,
    _i14.Order? order,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrder,
          [
            uid,
            order,
          ],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [FakeCheckoutService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeCheckoutService extends _i1.Mock
    implements _i15.FakeCheckoutService {
  MockFakeCheckoutService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FakeAuthRepository get fakeAuthRepository => (super.noSuchMethod(
        Invocation.getter(#fakeAuthRepository),
        returnValue: _FakeFakeAuthRepository_1(
          this,
          Invocation.getter(#fakeAuthRepository),
        ),
      ) as _i3.FakeAuthRepository);

  @override
  _i5.RemoteCartRepository get remoteCartRepository => (super.noSuchMethod(
        Invocation.getter(#remoteCartRepository),
        returnValue: _FakeRemoteCartRepository_3(
          this,
          Invocation.getter(#remoteCartRepository),
        ),
      ) as _i5.RemoteCartRepository);

  @override
  _i6.FakeOrdersRepository get fakeOrdersRepository => (super.noSuchMethod(
        Invocation.getter(#fakeOrdersRepository),
        returnValue: _FakeFakeOrdersRepository_4(
          this,
          Invocation.getter(#fakeOrdersRepository),
        ),
      ) as _i6.FakeOrdersRepository);

  @override
  _i7.FakeProductsRepository get fakeProductsRepository => (super.noSuchMethod(
        Invocation.getter(#fakeProductsRepository),
        returnValue: _FakeFakeProductsRepository_5(
          this,
          Invocation.getter(#fakeProductsRepository),
        ),
      ) as _i7.FakeProductsRepository);

  @override
  DateTime Function() get dateBuilder => (super.noSuchMethod(
        Invocation.getter(#dateBuilder),
        returnValue: () => _FakeDateTime_6(
          this,
          Invocation.getter(#dateBuilder),
        ),
      ) as DateTime Function());

  @override
  _i9.Future<void> placeOrder() => (super.noSuchMethod(
        Invocation.method(
          #placeOrder,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [FakeReviewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFakeReviewsRepository extends _i1.Mock
    implements _i8.FakeReviewsRepository {
  MockFakeReviewsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get addDelay => (super.noSuchMethod(
        Invocation.getter(#addDelay),
        returnValue: false,
      ) as bool);

  @override
  _i9.Stream<_i16.Review?> watchUserReview(
    String? id,
    String? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchUserReview,
          [
            id,
            uid,
          ],
        ),
        returnValue: _i9.Stream<_i16.Review?>.empty(),
      ) as _i9.Stream<_i16.Review?>);

  @override
  _i9.Future<_i16.Review?> fetchUserReview(
    String? id,
    String? uid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserReview,
          [
            id,
            uid,
          ],
        ),
        returnValue: _i9.Future<_i16.Review?>.value(),
      ) as _i9.Future<_i16.Review?>);

  @override
  _i9.Stream<List<_i16.Review>> watchReviews(String? id) => (super.noSuchMethod(
        Invocation.method(
          #watchReviews,
          [id],
        ),
        returnValue: _i9.Stream<List<_i16.Review>>.empty(),
      ) as _i9.Stream<List<_i16.Review>>);

  @override
  _i9.Future<List<_i16.Review>> fetchReviews(String? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchReviews,
          [id],
        ),
        returnValue: _i9.Future<List<_i16.Review>>.value(<_i16.Review>[]),
      ) as _i9.Future<List<_i16.Review>>);

  @override
  _i9.Future<void> setReview({
    required String? productId,
    required String? uid,
    required _i16.Review? review,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setReview,
          [],
          {
            #productId: productId,
            #uid: uid,
            #review: review,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [ReviewsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewsService extends _i1.Mock implements _i17.ReviewsService {
  MockReviewsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FakeAuthRepository get fakeAuthRepository => (super.noSuchMethod(
        Invocation.getter(#fakeAuthRepository),
        returnValue: _FakeFakeAuthRepository_1(
          this,
          Invocation.getter(#fakeAuthRepository),
        ),
      ) as _i3.FakeAuthRepository);

  @override
  _i8.FakeReviewsRepository get fakeReviewsRepository => (super.noSuchMethod(
        Invocation.getter(#fakeReviewsRepository),
        returnValue: _FakeFakeReviewsRepository_7(
          this,
          Invocation.getter(#fakeReviewsRepository),
        ),
      ) as _i8.FakeReviewsRepository);

  @override
  _i9.Future<void> submitReview({
    required String? productId,
    required _i16.Review? review,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #submitReview,
          [],
          {
            #productId: productId,
            #review: review,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
